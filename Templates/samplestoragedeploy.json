{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the Azure location where the key vault should be created."
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[concat('storage', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Specifies the name of the storageAccount."
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
            ],
            "metadata": {
                "description": "Specifies the sku name for the storage account."
            }
        },
        "kind": {
            "type": "string",
            "defaultValue": "StorageV2",
            "allowedValues": [
                "BlobStorage",
                "BlockBlobStorage",
                "FileStorage",
                "Storage",
                "StorageV2"
            ],
            "metadata": {
                "description": "Specifies the type of storage account."
            }
        },
        "accessTier": {
            "type": "string",
            "defaultValue": "Hot",
            "allowedValues": [
                "Hot",
                "Cool"
            ],
            "metadata": {
                "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing."
            }
        },
        "minimumTlsVersion": {
            "type": "string",
            "defaultValue": "TLS1_2",
            "allowedValues": [
                "TLS1_0",
                "TLS1_1",
                "TLS1_2"
            ],
            "metadata": {
                "description": "Set the minimum TLS version to be permitted on requests to storage."
            }
        },
        "supportsHttpsTrafficOnly": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Allows https traffic only to storage service if set to true."
            }
        },
        "allowBlobPublicAccess": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Allow or disallow public access to all blobs or containers in the storage account."
            }
        },
        "allowSharedKeyAccess": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD)."
            }
        },
        "networkAclsBypass": {
            "type": "string",
            "defaultValue": "AzureServices",
            "allowedValues": [
                "AzureServices",
                "Logging",
                "Metrics",
                "None"
            ],
            "metadata": {
                "description": "Specifies whether traffic is bypassed by the indicated service."
            }
        },
        "networkAclsDefaultAction": {
            "type": "string",
            "defaultValue": "Allow",
            "allowedValues": [
                "Allow",
                "Deny"
            ],
            "metadata": {
                "description": "Specifies the default action of allow or deny when no other rules match."
            }
        },
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "Environment": "Dev",
                "Project": "Tutorial"
            }
        },
    "createEventHubs": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to create event hubs to capture monitoring metrics."
      }
    },
    "eventHubResourceGroup": {
      "type": "string",
      "defaultValue": "edgelogrg",
      "metadata": {
        "description": "Event hubs namespace resource group."
      }
    },
    "eventHubsNamespace": {
      "type": "string",
      "defaultValue": "edgeloghubevents",
      "metadata": {
        "description": "Event hubs namespace name."
      }
    },
    "eventHubsName": {
      "type": "string",
      "defaultValue": "edgeloghubeventsinstance",
      "metadata": {
        "description": "Event hubs name."
      }
    }

    },
    "variables": {
        "testvar1":"testvar",
        "appInsightsName": "iotedgelogsapp-9775336a",
        "resourceTags1": {
//        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('appInsightsName')))]": "Resource",
        "01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567": "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('appInsightsName')))]", 
        "elms": "true",
        "iotHub": "[parameters('networkAclsDefaultAction')]",
        "logAnalyticsWorkspace": "[variables('testvar1')]",
        "eventHubsInstance": "[if(parameters('createEventHubs'), resourceId(parameters('eventHubResourceGroup'), 'Microsoft.EventHub/namespaces/eventhubs', parameters('eventHubsNamespace'), parameters('eventHubsName')), '')]"
      }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-01-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "tags": "[union(variables('resourceTags1'),parameters('resourceTags'))]",
            "sku": {
                "name": "[parameters('skuName')]"
            },
            "kind": "[parameters('kind')]",
            "properties": {
                "accessTier": "[parameters('accessTier')]",
                "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]",
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                "networkAcls": {
                    "bypass": "[parameters('networkAclsBypass')]",
                    "defaultAction": "[parameters('networkAclsDefaultAction')]"
                }
            }
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[parameters('storageAccountName')]"
        },
        "storageAccountResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]"
        },
        "location": {
            "type": "string",
            "value": "[parameters('location')]"
        }
    }
}